#!/usr/bin/env bash

set -e

script_name="$(basename "$0")"
script_dir="$(dirname "$(realpath "$0")")"
script_usage="$script_name"

usage() {
  echo "$script_name: usage: $script_usage" >&2
}

exit_with_error() {
  echo "$script_name: error: $1" >&2
  usage
  exit 1
}

expected_number_args="0"

if [ "$#" != "$expected_number_args" ]; then
  exit_with_error "invalid number of arguments, expected \"$expected_number_args\", recieved \"$#\""
fi

extract_variable() {
  grep "^$1=" "$2" | sed -E "s/^$1=(.*)$/\1/"
}

backup() {
  port="$1"
  user="$2"
  password="$3"
  dbname="$4"
  docker-compose -f "$script_dir/../docker-compose.yml" \
    exec -T --env PGPASSWORD="$password" \
    postgres pg_dump \
    --host="localhost" \
    --port="$port" \
    --username="$user" \
    --dbname="$dbname"
}

destination="$root_dir/backups/$(date +%Y)/$(date +%m)/$(date +%d)/$(date +%s).sql.gz"
port="$(extract_variable "POSTGRES_PORT" "$script_dir/../.env")"
user="$(extract_variable "POSTGRES_USER" "$script_dir/../.env")"
password="$(extract_variable "POSTGRES_PASSWORD" "$script_dir/../.env")"
dbname="$(extract_variable "POSTGRES_DB" "$script_dir/../.env")"

backup "$port" "$user" "$password" "$dbname" | gzip >"$destination"
